name: CI/CD Flask App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-job:
    runs-on: ubuntu-latest

    steps:
      - name: Check 1
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Debug SSH
        run: ssh -vvv -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}

  build:
    runs-on: ubuntu-latest
    needs: test-job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

#   locally
#    steps:
#      - name: Set up Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: Deploy locally with Docker Compose
#        run: |
#          docker-compose down
#          docker-compose up -d --build

#   on server
    steps:
#      - name: Start SSH agent
#        uses: webfactory/ssh-agent@v0.5.3
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: Set up SSH
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
#
#      - name: Debug SSH
#        run: ssh -vvv -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker stop flask-app || true
          docker rm flask-app || true
          docker run -d --name flask-app -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          EOF
      
